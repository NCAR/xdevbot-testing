name: Register repository
on:
  issues:
    types:
      - opened
      - reopened

jobs:
  register-repository:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Register new repository
        run: |
          python -m pip install requests ruamel.yaml
          python .github/workflows/register_repo.py

      - name: Capture diff output
        id: diff 
        shell: bash
        run: |
          output=$(git --no-pager diff config.yaml)
          echo $output
          echo ::set-env name=GIT_DIFF::"$output"

      - name: Pushing up-to-date config file
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add config.yaml && git commit -m "[skip ci] Update configuration file."
          # git push -f --set-upstream origin master

      - name: Send a reply message to the issue
        uses: actions/github-script@0.9.0
        env:
          STDOUT: "```${{ env.GIT_DIFF }}```"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs')
            const payload = JSON.parse(fs.readFileSync(process.env.GITHUB_EVENT_PATH, 'utf8'))
            // const repo_and_campaign = payload.issue.body.split('/add-repo')[1].trim()
            // const issue_reply = `ðŸ‘‹ Added ${repo_and_campaign} to the configuration file! Check the master branch for latest changes.`
            // Send a reply message to the issue
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.STDOUT
            })
